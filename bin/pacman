#!/usr/bin/env node

var program  = require("commander"),
    _        = require('underscore')._,
    config   = require("../lib/config"),
    core     = require("../lib/core"),
    log      = require("../lib/log"),
    fss      = require("../lib/fss"),
    deploy   = require("../lib/deploy"),
    server   = require("../lib/server");

/*
 * Parse command line flags.
 */
program
  .version(config.version)
  .option("")
  .option("-d, --dev", "dev mode: serve content directly")
  .option("-b, --build", "build mode: build a complete version, with packed assets")
  .option("")
  .option("-s, --server", "start a server from the build directory")
  .option("-p, --port <value>", "specify a different server port (default 3000)")
  .option("")
  .option("-c, --config <value>", "specify a different config file (default ./config.js)")
  .option("-f, --from <value>", "specify a different source directory (default ./content)")
  .option("-t, --target <value>", "specify a different target directory (default ./public)")
  .option("-r, --rsync <target>", "rsync target dir to remote server or local dir")
  .parse(process.argv);

/*
 * If no options are given, show the help prompt.
 */
if(!program.server && !program.dev && !program.build && !program.rsync) {
  program.help();
}

/*
 * Silent mode is for programmatic use of pacman.
 */
config.silent = false;

/*
 * Overwrite the default config with custom command line configuration.
 */
config.extend(_.pick(program, [
  "dev", "build", "server", "target", "from", "config", "port", "rsync"
]));

/*
 * Start the system in dev mode.
 */
var devmode = function() {
  log("Source", fss.baseRelative(config.appdir));
  server.dev();
  log();
};

/*
 * Start the system in build mode.
 */
var buildmode = function() {
  log("Source", fss.baseRelative(config.appdir));
  log("Target", fss.baseRelative(config.pubdir));
  core.regenAll();
  log();
};

/*
 * Deploy the target directory using rsync.
 */
var rsync = function() {
  log("rsync", "deploying target directory");
  deploy.perform();
};

/*
 * Decide what to do.
 */
log();
if(config.dev && !config.build) devmode();
if(config.server && !config.dev) server.build();
if(config.build) buildmode();
if(!config.dev && !config.server && config.rsync) rsync();
